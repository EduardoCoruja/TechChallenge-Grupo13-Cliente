name: Build and Push to ECR

on:
  push:
    branches:
      - feature/felipe-aws

jobs:
  build:
    runs-on: ubuntu-latest            

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials Action for GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: us-east-1

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0'

      - name: Restore NuGet packages
        working-directory: ./APICliente/APICliente
        run: dotnet restore

      - name: Build API
        working-directory: ./APICliente/APICliente
        run: dotnet build --configuration Release

      - name: Log in to AWS ECR
        id: login-ecr
        run: |          
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 399256494712.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Docker image
        working-directory: ./APICliente
        run: |
          docker build -t ecr-cliente .          
          docker tag ecr-cliente:latest 399256494712.dkr.ecr.us-east-1.amazonaws.com/ecr-cliente:latest

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"eraldoads_TechChallenge-Grupo13-Cliente" /o:"sonarcloud-github-2024" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build --configuration Release
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"    

      - name: Push Docker image to ECR
        run: |
          docker push 399256494712.dkr.ecr.us-east-1.amazonaws.com/ecr-cliente:latest

      - name: Update ECS with new image
        id: new-deploy
        run: |                    
          aws ecs update-service --cluster piklesCluster --service svc-cliente --force-new-deployment
